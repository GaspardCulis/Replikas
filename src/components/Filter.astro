---
import Button from '../components/Button.astro';
import TextField from '../components/TextField.astro';
import { default as ArticleModel } from '../model/Article';

const search = Astro.url.searchParams.get('article') || '';
const minPrice = parseInt(Astro.url.searchParams.get('minPrice')) || 0;
const maxPrice =
	parseInt(Astro.url.searchParams.get('maxPrice')) || Number.MAX_SAFE_INTEGER;
const onGoing = Astro.url.searchParams.get('onGoing') || 'true';

const PAGE_SIZE = 20;
const page = Math.max(parseInt(Astro.url.searchParams.get('page')) || 1, 1);

let articles = await ArticleModel.getBySearchFilter(
	search,
	minPrice,
	maxPrice,
	/true/i.test(onGoing),
	{
		limit: 20,
		offset: 0,
	}
);

const length = articles.length;
const hasMore = articles.length > page * PAGE_SIZE;
if (hasMore) {
	articles = articles.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);
}
const pages = [...Array(Math.ceil(length / PAGE_SIZE)).values()];
---

<form>
	<div class="prixMin centered">
		<label>Prix min :</label>
		<TextField
			id="minPrice"
			type="number"
			placeholder="Ex : 70"
			minNumber={0}
		/>
	</div>
	<div class="prixMax centered">
		<label>Prix max :</label>
		<TextField
			id="maxPrice"
			type="number"
			placeholder="Ex : 250"
			minNumber={0}
		/>
	</div>
	<div class="enCour centered">
		<label for="pending">Afficher les ench√®res en cours</label>
		<label class="switch">
			<input type="checkbox" checked />
			<span class="slider round"></span>
		</label>
	</div>
	<p id="errorMsg"></p>
</form>

<style>
	.centered {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.enCour > * {
		margin: 1rem;
	}

	/*----------------Toggle button------------------*/

	/* The switch - the box around the slider */
	.switch {
		position: relative;
		display: inline-block;
		width: 60px;
		height: 34px;
		scale: 0.8;
	}

	/* Hide default HTML checkbox */
	.switch input {
		opacity: 0;
		width: 0;
		height: 0;
	}

	/* The slider */
	.slider {
		position: absolute;
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: #ccc;
		-webkit-transition: 0.4s;
		transition: 0.4s;
	}

	.slider:before {
		position: absolute;
		content: '';
		height: 26px;
		width: 26px;
		left: 4px;
		bottom: 4px;
		background-color: white;
		-webkit-transition: 0.4s;
		transition: 0.4s;
	}

	input:checked + .slider {
		background-color: var(--theme-button);
	}

	input:focus + .slider {
		box-shadow: 0 0 1px var(--theme-button);
	}

	input:checked + .slider:before {
		-webkit-transform: translateX(26px);
		-ms-transform: translateX(26px);
		transform: translateX(26px);
	}

	/* Rounded sliders */
	.slider.round {
		border-radius: 34px;
	}

	.slider.round:before {
		border-radius: 50%;
	}
</style>
