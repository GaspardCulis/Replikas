---
---

<div id="breadcrumb"></div>
<style is:inline>
	@import url(https://fonts.googleapis.com/css?family=Merriweather+Sans);
	#breadcrumb {
		margin-top: 1%;
		overflow: hidden;
	}
	#breadcrumb > * {
		color: var(--theme-text);
		text-decoration: none;
		transition: 0.5s ease;
	}
	#breadcrumb > *:hover,
	#breadcrumb > *:hover:after {
		transition: 0.5s ease;
		color: var(--theme-button-text);
		background-color: var(--theme-button);
	}
	#breadcrumb a {
		text-decoration: none;
		outline: none;
		display: block;
		float: left;
		font-size: 18px;
		font-weight: bold;
		line-height: 36px;
		/*need more margin on the left of links to accomodate the numbers*/
		padding: 0 10px 0 35px;
		background: var(--theme-secondary);
		position: relative;
	}
	/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
	#breadcrumb a:first-child {
		padding-left: 46px;
	}
	#breadcrumb a:first-child:before {
		left: 14px;
	}
	#breadcrumb a:last-child {
		border-radius: 0 5px 5px 0; /*this was to prevent glitches on hover*/
		padding-right: 20px;
	}

	/*adding the arrows for the breadcrumbs using rotated pseudo elements*/
	#breadcrumb a:after {
		content: '';
		position: absolute;
		top: 0;
		right: -18px; /*half of square's length*/
		/*same dimension as the line-height of .breadcrumb a */
		width: 36px;
		height: 36px;

		transform: scale(0.707) rotate(45deg);
		/*we need to prevent the arrows from getting buried under the next link*/
		z-index: 1;
		/*background same as links but the gradient will be rotated to compensate with the transform applied*/
		background: var(--theme-secondary);
		/*stylish arrow design using box shadow*/
		box-shadow: 2px -2px 0 2px var(--theme-text);
		/*
		5px - for rounded arrows and 
		50px - to prevent hover glitches on the border created using shadows*/
		border-radius: 0 5px 0 50px;

		transition: 0.5s ease;
	}
	/*we dont need an arrow after the last link*/
	#breadcrumb a:last-child:after {
		content: none;
	}
</style>

<script>
	import Id from '../pages/auction/[id].astro';

	const breadcrumb = document.getElementById('breadcrumb');

	const url = new URL(window.location.href);
	const history = JSON.parse(sessionStorage.getItem('history') || '[]');

	//If user navigate to a visited page, remove all pages after it in the history array
	const index = history.indexOf(url.pathname.replace('/', ''));
	if (index > -1) {
		history.splice(index + 1, history.length);
	}
	//if same name, remove the last one
	if (history[history.length - 1] === url.pathname.replace('/', '')) {
		history.pop();
	}
	//
	console.log(history);
	history.push(url.pathname.replace('/', ''));
	sessionStorage.setItem('history', JSON.stringify(history));
	if (history.length > 0) {
		console.log(history);
		const historyLength = history.length;
		console.log(historyLength);
		updateBreadCrumb();
	}

	const home = document.getElementById('home');
	home.addEventListener('click', () => {
		sessionStorage.clear();
	});
	//si je clique sur un élément du breadcrumb, je supprime tout ce qui est après dans le tableau
	//je supprime tout ce qui est après dans le tableau
	const breadcrumbLinks = document.querySelectorAll('#breadcrumb a');
	breadcrumbLinks.forEach((link) => {
		link.addEventListener('click', () => {
			const history = JSON.parse(sessionStorage.getItem('history') || '[]');
			const index = history.indexOf(url.pathname.replace('/', ''));
			history.splice(index - 1, history.length);
			sessionStorage.setItem('history', JSON.stringify(history));
			updateBreadCrumb();
		});
	});

	function updateBreadCrumb() {
		const history = JSON.parse(sessionStorage.getItem('history') || '[]');

		const link = document.createElement('a');
		link.href = '/';
		link.innerText = 'home';
		link.setAttribute('id', 'home');
		breadcrumb.appendChild(link);
		//quand j'appuies sur le logo je supprime tout le tableau
		for (let i = 1; i < history.length; i++) {
			createLink(history[i], history[i]);
		}
	}

	function createLink(text: string, href: string) {
		const link = document.createElement('a');
		link.href = href;
		link.innerText = text;
		breadcrumb.appendChild(link);
	}
	const logo = document.querySelector('.css-1j8o68f');
	logo.addEventListener('click', () => {
		sessionStorage.clear();
	});
</script>
