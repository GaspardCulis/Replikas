---
import Logo from "../components/Logo.astro";
import SearchBar from "../components/SearchBar.astro";
import Account, { SessionTokenInvalideError } from "../model/users/Account";
import Buyer from "../model/users/Buyer";
import Company from "../model/users/Company";

export interface Props {
	page_name?: string;
	search_bar?: boolean;
}

const { page_name, search_bar } = Astro.props;
// Recuperer les infos de l'utilisateur
let account: Account | Buyer | Company;
const cookies = Astro.request.headers.get("cookie");
if (cookies) {
	const token = (cookies.endsWith(";") ? cookies : cookies + ";").match(/token=([^;]*);/); // Recuperer le token de session
	try {
		account = await Account.getBySession(token[1]); // Recuperer l'utilisateur
		if (account.isCompany()) account = await Company.getFromAccount(account);
		else account = await Buyer.getFromAccount(account);
	} catch (SessionTokenInvalideError) {
		account = null; // Si le token est invalide, on ne recupere pas l'utilisateur
	}
}
---

<header>
	<a href="/" aria-label="Retour au menu principal"><Logo /></a>

	<h2>{page_name}</h2>

	<nav>
		<slot />
	</nav>

	<div id="right">
		{search_bar && <SearchBar />}
		{
			account ? ( // Si l'utilisateur est connecte
				<a class="button hbox" href="/settings" style="align-items: center;">
					<div class="user_icon_container">
						<img src="/img/icons/user.svg" alt="User" />
					</div>
					{account.toString()}
				</a>
			) : (
				// Si l'utilisateur n'est pas connecte
				<>
					<a class="button" id="signup" href="/register">
						{" "}
						Creer un compte
					</a>
					<a class="button" id="login" href="/login">
						{" "}
						Connectez-vous
					</a>
				</>
			)
		}
	</div>
</header>

<style>
	body {
		margin: 0px;
		padding: 0px;
	}

	:root {
		--background-color: #222222;
	}

	header {
		display: flex;
		align-items: center;
		justify-content: space-between;
		background-color: var(--background-color);
		color: whitesmoke;

		max-width: 100%;
		padding-block: 1rem;
		padding-inline: 2rem;

		z-index: 1;

		flex-grow: 0;
		flex-shrink: 0;
	}

	#right {
		display: flex;
		align-items: center;
	}

	.button {
		color: whitesmoke;
		text-decoration: none;
		font-size: 1.5rem;
		padding: 0.5rem 1rem;
		margin: 0.5rem;
		border-radius: 0.5rem;
		background-color: #4b4e6d;
	}

	.button:hover {
		background-color: #6b6e8d;
	}

	.user_icon_container {
		width: 40px;
		height: 40px;
		border-radius: 50%;
		background-color: whitesmoke;
		display: flex;
		align-items: center;
		justify-content: center;
		margin-right: 1rem;
		overflow: hidden;
	}

	.user_icon_container img {
		width: 50px;
		height: 50px;
		transform: translateY(8px);
	}
</style>
