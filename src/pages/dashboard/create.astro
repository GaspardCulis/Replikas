---
import AutoCompleteTextField from '../../components/AutoCompleteTextField.astro';
import Button from '../../components/Button.astro';
import DragDrop from '../../components/Drag&Drop.astro';
import TextField from '../../components/TextField.astro';
import Layout from '../../layouts/Layout.astro';
import Article from '../../model/Article';

// TODO : Gérer le download d'images, la création d'un nouvel article et la proposition lorsqu'on écrit un nom de film

/*
if (Astro.request.method == 'POST') {
	const formData = await Astro.request.formData();
	const {
		name,
		movie,
		description,
		startDate,
		startHour,
		endDate,
		endHour,
		price,
		bidding,
	} = Object.fromEntries(formData) as {
		name: string;
		movie: string;
		description: string;
		startDate: string;
		startHour: string;
		endDate: string;
		endHour: string;
		price: string;
		bidding: string;
	};
}*/
---

<Layout title="Création article" no_searchbar>
	<form method="post" action="/dashboard/create" id="form" autocomplete="off">
		<div class="title">
			<h1>Poster un nouvel article</h1>
			<p>
				Ici vous pourrez personnaliser votre produit à votre guise afin de
				satisfaire la demande des clients
			</p>
		</div>
		<div class="info_produit">
			<h2>Informations principales du produit</h2>
			<div class="main_info">
				<div class="grid_one">
					<h3>Intitulé :</h3>
					<TextField
						type="text"
						placeholder="Ex : Sabre Laser..."
						length="15rem"
						name="name"
						id="name"
					/>

					<h3>Œuvre(s) d'origine (film/série) :</h3>
					<AutoCompleteTextField
						type="text"
						placeholder="Ex : Star Wars : Un Nouvel Espoir"
						length="15rem"
						name="movie"
						id="myInput"
					/>
				</div>
				<div class="grid_two">
					<h3>Description du produit :</h3>

					<textarea
						id="description"
						placeholder="Ex : Réplique du sabre de Dark Vador utilisé lors du tournage du film “Star Wars : Un Nouvel Espoir” Note : Les effets lumineux sont indisponibles (rajoutés via effets spéciaux)"
						name="description"
						id="description"></textarea>
				</div>
			</div>
		</div>
		<div class="info_produit">
			<h2>Date de l'enchère</h2>

			<div class="auctionDate">
				<h3>Début de l’enchère :</h3>
				<div class="inputTime">
					<p>Jour :</p>
					<TextField type="date" name="startDate" id="startDate" />
					<p>Heure :</p>
					<TextField type="time" text="00:00" name="startHour" id="startHour" />
				</div>
			</div>

			<div class="auctionDate">
				<h3>Fin de l’enchère :</h3>
				<div class="inputTime">
					<p>Jour :</p>
					<TextField type="date" name="endDate" id="endDate" />
					<p>Heure :</p>
					<TextField type="time" text="00:00" name="endHour" id="endHour" />
				</div>
			</div>
		</div>

		<div class="info_produit">
			<h2>Choix du prix du produit</h2>
			<div>
				<div>
					<h3>Prix de base du produit :</h3>
					<TextField
						type="number"
						placeholder="Ex : 120, 2300,..."
						name="price"
						id="price"
					/>
				</div>
				<div>
					<h3>Surenchère minimum :</h3>
					<TextField
						name=""
						type="number"
						placeholder="Ex : 1, 13, 50,..."
						name="bidding"
						id="bidding"
					/>
				</div>
			</div>
		</div>
		<div class="info_produit">
			<h2>Ajout d’images à l’article</h2>
			<DragDrop />
		</div>
		<div class="create_button">
			<Button text="Créer l’article" id="create_article" />
		</div>
	</form>
</Layout>

<style>
	form {
		margin: auto;
		padding-top: 1.5rem;
		padding-bottom: 1.5rem;
		padding-left: 3rem;
		padding-right: 3rem;
		max-width: 80ch;
		background-color: var(--theme-secondary);
		border-radius: 15px;
	}

	.info_produit {
		background-color: var(--theme-button);

		display: flex;
		flex-direction: column;
		align-items: center;

		margin: 25px auto;
		padding: 1rem 3rem;
		max-width: 80ch;

		border-radius: 15px;
	}

	.title {
		margin-bottom: 3rem;
	}

	/*------------Main informations----------------*/

	.main_info {
		display: grid;
	}

	.grid_one {
		grid-column: 1;
	}

	.grid_two {
		grid-column: 2;
	}

	textarea {
		background-color: whitesmoke;

		border: none;
		border-radius: 5px;

		margin: 1rem;
		padding: 0.7rem;

		width: 18rem;
		height: 7rem;
	}

	textarea:focus {
		outline: none;
	}

	/*--------------Auction date------------------*/

	.auctionDate {
		width: 100%;
	}

	.inputTime {
		display: flex;
		flex-wrap: nowrap;
		align-items: center;
		justify-content: center;
	}

	/*--------------Creation button----------------*/
	.create_button {
		text-align: end;
		margin: 2rem 10% 1rem 0;
	}

	/*--------------Texts----------------*/

	h1,
	h2,
	p {
		text-align: center;
	}

	h1 {
		font-size: 2.5rem;
		margin: 0;
	}

	h2 {
		margin: 0.5rem auto 2rem auto;
	}

	h3 {
		margin: 0;
	}
</style>

<script>
	/* Script pour la vérification du contenu du formulaire */

	let form = document.getElementById('form');

	form.onsubmit = (event: Event) => {
		let name = document.getElementById('name') as HTMLInputElement;
		let movie = document.getElementById('movie') as HTMLInputElement;
		let description = document.getElementById(
			'description'
		) as HTMLInputElement;
		let startDate = document.getElementById('startDate') as HTMLInputElement;
		let startHour = document.getElementById('startHour') as HTMLInputElement;
		let endDate = document.getElementById('endDate') as HTMLInputElement;
		let endHour = document.getElementById('endHour') as HTMLInputElement;
		let price = document.getElementById('price') as HTMLInputElement;
		let bidding = document.getElementById('bidding') as HTMLInputElement;
		let no_error = true;

		let dateDebut: Date, dateFin: Date;
		let currentDate = new Date();

		if (!name.value) {
			no_error = false;
			errorMessage(name, 'Entrez un intitulé');
		} else {
			noErrorMessage(name);
		}
		if (!movie.value) {
			no_error = false;
			errorMessage(movie, 'Entrez un nom de film');
		} else {
			noErrorMessage(name);
		}
		if (!description.value) {
			no_error = false;
			errorMessage(description, 'Entrez une description');
		} else {
			noErrorMessage(name);
		}
		if (!startDate.value) {
			no_error = false;
			errorMessage(startDate, 'Entrez une date de début');
		} else {
			noErrorMessage(name);
			dateDebut = new Date(startDate.value + 'T' + startHour.value);
		}
		if (!endDate.value) {
			no_error = false;
			errorMessage(endDate, 'Entrez une date de fin');
		} else {
			noErrorMessage(name);
			dateFin = new Date(endDate.value + 'T' + endHour.value);
		}
		if (startDate && endDate && dateDebut > dateFin) {
			no_error = false;
			errorMessage(
				startDate,
				'La date de début doit commencer avant la date de fin'
			);
		} else {
			noErrorMessage(name);
		}
		if (startDate && dateDebut < currentDate) {
			no_error = false;
			errorMessage(
				startDate,
				"La date de début doit commencer après aujourd'hui"
			);
		} else {
			noErrorMessage(name);
		}
		if (!price.value) {
			no_error = false;
			errorMessage(price, 'Entrez un prix');
		} else {
			noErrorMessage(name);
		}
		if (!bidding.value) {
			no_error = false;
			errorMessage(bidding, 'Entrez un prix de surenchérissement minimum');
		} else {
			noErrorMessage(name);
		}

		if (!no_error) {
			event.preventDefault();
		}

		function errorMessage(elem: HTMLInputElement, err: string) {
			elem.style.border = 'solid';
			elem.style.borderColor = 'red';
			elem.setCustomValidity(err);
			elem.reportValidity();
			elem.setCustomValidity('');
		}
		function noErrorMessage(elem: HTMLInputElement) {
			elem.style.border = 'none';
		}
	};
</script>
