---
import TextField from '../../components/TextField.astro';
import Layout from '../../layouts/Layout.astro';
import Article, { ArticleInexistantError } from '../../model/Article';
import Bids from '../../model/Bids';
import Company from '../../model/users/Company';
import { dateDiff, getBuyerBySession } from '../../model/Utilitaire';

const id = parseInt(Astro.params.id); // L'id de l'article est dans le chemin de l'URL

let article: Article;
let company: Company;
try {
	article = await Article.get(id);
	company = await Company.getById(article.getSellingCompanyId());
} catch (e) {
	if (e instanceof ArticleInexistantError)
		return new Response('Article introuvable', { status: 404 }); // FIXME : pas tres bastien scapin like
	console.log(e);
	return new Response(`Erreur interne : ${e}`, { status: 500 }); // FIXME : pas tres bastien scapin like
}

if (Astro.request.method === 'POST') {
	const buyer = await getBuyerBySession(Astro.request.headers).catch(
		() => null
	);
	if (!buyer) return new Response('Vous devez être connecté', { status: 403 });

	if (article.getFinVente() < new Date())
		return new Response('Enchère terminée', { status: 400 });

	if (article.getDebutVente() > new Date())
		return new Response('Enchère pas encore commencée', { status: 400 });

	const formData = await Astro.request.formData();
	const bid = formData.get('bid') as any as number;
	if (isNaN(bid)) return new Response('Offre invalide', { status: 400 });
	if (
		bid <
		(await Bids.getEnchereMax(article)) + article.getEncherissementMin()
	)
		return new Response('Offre trop faible', { status: 400 });

	try {
		await Bids.placerEnchere(article, bid, buyer);
	} catch (e) {
		return new Response(`Erreur interne : ${e}`, { status: 500 }); // FIXME : pas tres bastien scapin like
	}

	return new Response('Offre placée', { status: 200 });
}

const SUGGESTION_MULTIPLIERS = [1, 3, 5];

const debutVente = article.getDebutVente();
const finVente = article.getFinVente();

const enCours = debutVente < new Date() && finVente > new Date();

const starts = dateDiff(debutVente, new Date());
const ends = dateDiff(finVente, new Date());

const nom = article.getName();
const prix = await Bids.getEnchereMax(article);
const encherissement_min = article.getEncherissementMin();
const images = article.getImages() || [await article.getPoster()];
const description = article.getDescription();

console.log(images);
---

<Layout title="Replikas" no_searchbar>
	<section>
		<div
			id="data"
			data-id={id}
			data-debutvente={debutVente}
			data-finvente={finVente}
			data-multipliers={SUGGESTION_MULTIPLIERS}
		>
		</div>
		<h1 id="timeDiff">
			{
				enCours
					? `Se termine dans ${ends.day}j ${ends.hour}h ${ends.min}min ${ends.sec}s`
					: `Débute dans ${starts.day}j ${starts.hour}h ${starts.min}min ${starts.sec}s`
			}
		</h1>

		<div class="main-wrapper">
			<aside class="sideBar">
				<div class="img">
					{images.map((image) => <img src={image} alt={nom} />)}
				</div>
			</aside>
			<article class="informations">
				<div>
					<h1 class="center">{nom}</h1>
					<h3 class="left-margin">
						{enCours ? 'Enchère actuelle :' : 'Prix de départ : '}
					</h3>
					<h2 id="current-price" class="center">{prix} €</h2>
					<h3 class="left-margin">Placer une offre :</h3>
					<form>
						<div>
							{
								SUGGESTION_MULTIPLIERS.map((multiplier) => (
									<button
										class="button suggestion-value"
										type="submit"
										name="bid"
										value={prix + encherissement_min * multiplier}
									>
										{prix + encherissement_min * multiplier + ' €'}
									</button>
								))
							}
						</div>
						<div>
							<TextField
								id="manual-bid"
								type="number"
								name="bid"
								minNumber={prix + encherissement_min}
								placeholder={prix + encherissement_min + ' ou plus'}
							/>
						</div>
						<div>
							<input
								id="placerOffre"
								class="button"
								type="submit"
								value="Placer l'offre"
							/>
						</div>
					</form>
					<h3 class="left-margin">Vendu par :</h3>
					<h2 class="center">{company.getNom()}</h2>
					<h3 class="left-margin">Déscription :</h3>
					<p class="center">
						{description}
						Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorum nemo
						tenetur animi tempore! Minus quisquam cumque assumenda! Repellendus modi
						laboriosam earum laudantium, praesentium enim, nihil, ipsa commodi error
						in similique. Inventore, magni qui! Minima temporibus inventore illum
						quod delectus doloremque quos numquam, quia sed similique corporis? Vero
						molestiae eaque, fuga incidunt laudantium nostrum nesciunt perspiciatis
						sint saepe magnam quos sit mollitia ipsam ipsum modi beatae reprehenderit
						praesentium voluptatibus, non veniam odio rerum adipisci eligendi reiciendis!
						Beatae sapiente, veniam hic minus quaerat, commodi illum odit exercitationem
						non incidunt delectus quibusdam in aperiam velit ipsa nulla consectetur
						tempora. Magnam tempore illo quo optio eius, doloribus ducimus error
						maxime odit soluta, libero est laboriosam, repudiandae vero minima beatae
						accusamus! Sapiente impedit exercitationem autem cum fugit ipsam sit
						modi molestias temporibus placeat! Enim quisquam praesentium magni eveniet
						voluptas ipsum iste veniam. Dolorum amet, eaque quas nulla, repellat
						mollitia doloribus quam minima eum architecto praesentium natus obcaecati
						animi aliquam cum quisquam? Veritatis cumque deserunt sapiente, perspiciatis
						magni odit iusto ab, dolorum quis a iure illo repellendus et neque aliquid
						nihil praesentium molestias voluptatibus? Tenetur omnis temporibus minima
						repudiandae id ipsam, repellat architecto nam deleniti, quibusdam quidem
						non molestias mollitia libero quasi ipsum laborum laboriosam dicta aliquam
						sapiente? Possimus dicta quisquam labore molestiae aspernatur voluptate,
						tenetur dolores incidunt assumenda pariatur error autem blanditiis? Quisquam,
						tempora fugiat eveniet aperiam eligendi illo, officiis incidunt quia
						esse harum quod dolorem eum blanditiis. Magnam ipsam eum nobis voluptatem
						nam necessitatibus ratione iste quam, illo cum beatae voluptatum, atque
						at eaque molestias sapiente! Autem nemo modi nisi eaque voluptate at
						soluta, esse corporis culpa, maiores nobis sunt, porro aliquid dolore!
						Ad omnis natus illo eius, praesentium tempora totam ipsum voluptatem
						minima nulla enim voluptatibus provident ducimus aut quasi, quis necessitatibus
						ea placeat voluptate obcaecati a. Dolorum, doloribus voluptate. Veritatis
						consequuntur soluta nihil sint adipisci neque perferendis blanditiis
						repellat cumque hic rem dicta commodi facere possimus est doloremque
						dolores impedit eum, amet consequatur a laboriosam sequi? Quidem dolore
						ea exercitationem minus iure neque iusto ducimus numquam, blanditiis
						aliquid. Aliquid sit rerum reprehenderit hic quod laborum, aliquam deleniti
						tempora, iure iste ullam ut doloremque vitae amet molestiae aperiam impedit.
						Odio possimus voluptatem odit vitae magnam sint eum facere minus consectetur.
						Ullam corporis labore neque! Dolore ipsa eveniet, maxime, neque deleniti
						ipsum assumenda illum provident cum itaque alias modi iste error laudantium
						doloremque quas saepe eligendi exercitationem. Voluptates, dolor atque.
						Culpa magni pariatur quidem cum quasi molestias aspernatur quas commodi
						ipsum, ipsa eos sint iste earum, tempora sequi dicta illo aperiam rem
						totam autem ullam quaerat nobis. Autem architecto, hic ea, recusandae
						eos animi iure ab nisi sit nulla tenetur blanditiis tempore reiciendis
						numquam dolorem debitis possimus doloribus delectus itaque asperiores.
						Sunt adipisci cupiditate similique est maxime! Vel voluptates enim nam
						minus veniam? Cumque est accusamus architecto cum voluptatum nisi totam
						quasi qui id tempora, nihil quam explicabo odio provident ea, praesentium
						alias blanditiis. Consectetur qui aspernatur voluptates dolorum autem
						quia, saepe voluptas ullam, blanditiis perferendis consequuntur molestias
						suscipit assumenda optio veritatis dolorem quidem!
					</p>
				</div>
			</article>
		</div>
	</section>
</Layout>

<style>
	section {
		margin: 20px auto;
		padding: 40px 4%;
		width: 90%;

		border-radius: 20px;
	}

	.main-wrapper {
		display: grid;
		grid-template-areas: 'sidebar main';
		grid-template-columns: minmax(0, 35%) minmax(0, 60%);
		gap: 20px;
	}

	.main-wrapper > * {
		background-color: var(--theme-secondary);

		margin: 10px;
	}

	/*---------Side Bar------------*/
	.sideBar {
		position: sticky;
		top: 0;

		grid-area: 'sidebar';
		overflow: auto;

		max-height: 80vh;

		border-radius: 2rem;
	}

	.img {
		width: 100%;
		overflow-y: scroll;
	}

	.img > img {
		width: 100%;
	}

	/*----------Informations------------*/
	.informations {
		grid-area: 'main';

		border-radius: 2rem;
		padding: 2rem;
	}

	/*------------Formulaire d'enchérissement---------------*/
	form {
		margin: 2rem;

		display: flex;
		flex-wrap: wrap;
		justify-content: center;
	}

	form div {
		display: flex;
		justify-content: center;
		width: 100%;
	}

	form div * {
		margin: 0 1.5rem;
	}

	form > * {
		margin: 10px 0;
	}

	#placerOffre {
		font-size: 1.5rem;
	}

	.button {
		color: var(--theme-button-text);
		background-color: var(--theme-button);

		border: none;
		border-radius: 5px;

		padding: 0.5rem 1rem;
		cursor: pointer;

		font-size: 1rem;
	}

	.button:hover {
		transition: 0.3s ease;
		filter: brightness(1.2);
	}

	/*-----------Texts----------*/
	.center {
		text-align: center;
	}

	.left-margin {
		margin-left: 5rem;
	}

	h1 {
		margin: 0.5rem 0 1rem 0;
		font-size: 2.5rem;
	}

	h2 {
		font-size: 2rem;
	}

	h3 {
		font-size: 1.3rem;
	}

	p {
		font-size: 1.2rem;
	}
</style>

<script>
	import Swal from 'sweetalert2';

	const data = document.getElementById('data').dataset;
	const id = parseInt(data.id);
	const debutvente = new Date(data.debutvente);
	const finvente = new Date(data.finvente);
	const multipliers = JSON.parse(`[${data.multipliers}]`);

	const currentPrice = document.getElementById('current-price');
	const timeDiff = document.getElementById('timeDiff');
	const suggestionValues = document.querySelectorAll(
		'.suggestion-value'
	) as NodeListOf<HTMLButtonElement>;
	const manualBidInput = document.getElementById(
		'manual-bid'
	) as HTMLInputElement;
	const form = document.querySelector('form');

	/**
	 * Duplicate of the one in the server
	 */
	function dateDiff(date1, date2) {
		var diff = {
			sec: 0,
			min: 0,
			hour: 0,
			day: 0,
		};
		var diff_temps = date1.getTime() - date2.getTime();
		diff_temps = Math.floor(diff_temps / 1000);
		diff.sec = diff_temps % 60;
		diff_temps = Math.floor((diff_temps - diff.sec) / 60);
		diff.min = diff_temps % 60;
		diff_temps = Math.floor((diff_temps - diff.min) / 60);
		diff.hour = diff_temps % 24;
		diff_temps = Math.floor((diff_temps - diff.hour) / 24);
		diff.day = diff_temps;
		return diff;
	}

	async function updatePrice() {
		await fetch(`/api/article/${id}/info`)
			.then((res) => res.json())
			.then((data) => {
				currentPrice.innerText = data.current_bid + ' €';
				suggestionValues.forEach((suggestion, i) => {
					suggestion.value = data.current_bid + data.min_bid * multipliers[i];
					suggestion.innerText = suggestion.value + ' €';
				});
				manualBidInput.min = data.current_bid + data.min_bid;
				manualBidInput.placeholder = manualBidInput.min + ' ou plus';
			});
	}

	function updateDates() {
		const now = new Date();
		const starts = dateDiff(new Date(debutvente), now);
		const ends = dateDiff(new Date(finvente), now);
		if (
			starts.sec >= 0 &&
			starts.min >= 0 &&
			starts.hour >= 0 &&
			starts.day >= 0
		) {
			timeDiff.innerText = `Débute dans ${starts.day}j ${starts.hour}h ${starts.min}min ${starts.sec}s`;
		} else if (
			ends.sec >= 0 &&
			ends.min >= 0 &&
			ends.hour >= 0 &&
			ends.day >= 0
		) {
			timeDiff.innerText = `Se termine dans ${ends.day}j ${ends.hour}h ${ends.min}min ${ends.sec}s`;
		} else {
			timeDiff.innerText = '';
		}
	}

	setInterval(updatePrice, 1000);
	setInterval(updateDates, 1000);
	suggestionValues.forEach((suggestion) => {
		suggestion.addEventListener('click', (e) => {
			e.preventDefault();
			manualBidInput.value = suggestion.value;
		});
	});

	form.addEventListener('submit', async (e) => {
		e.preventDefault();
		const formData = new FormData(form);
		const response = await fetch('', {
			method: 'POST',
			body: formData,
		});
		if (response.status === 200) {
			Swal.fire({
				title: 'Offre placée',
				icon: 'success',
			});
		} else if (response.status === 403) {
			Swal.fire({
				title: 'Vous devez être connecté',
				icon: 'error',
				footer: `<a href="/login?redirect=/auction/${id}" style="margin-inline: 6px; text-decoration: none; color: var(--theme-link);">
							 Connectez 
						</a> vous ou 
						<a href="/register?redirect=/auction/${id}" style="margin-inline: 6px; text-decoration: none; color: var(--theme-link);">
							 inscrivez 
						</a> vous pour pouvoir enchérir`,
			});
		} else if (response.status === 400) {
			Swal.fire({
				title: await response.text(),
				icon: 'error',
			});
		} else {
			Swal.fire({
				title: 'Erreur inconnue',
				icon: 'error',
			});
		}
	});
</script>
